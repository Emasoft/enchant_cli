name: Super-Linter

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  statuses: write
  pull-requests: write
  issues: write
  checks: write

jobs:
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Run Super-Linter
        uses: github/super-linter@v5
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # Language-specific settings
          VALIDATE_ALL_CODEBASE: false  # Only validate changed files in PRs

          # Python settings
          VALIDATE_PYTHON_BLACK: false  # We use ruff format instead
          VALIDATE_PYTHON_FLAKE8: false  # We use ruff instead
          VALIDATE_PYTHON_ISORT: false  # We use ruff instead
          VALIDATE_PYTHON_PYLINT: false  # We use ruff instead
          VALIDATE_PYTHON_MYPY: true
          PYTHON_MYPY_CONFIG_FILE: pyproject.toml

          # Use our project's linting tools
          VALIDATE_PYTHON_RUFF: true

          # YAML settings
          VALIDATE_YAML: true
          YAML_CONFIG_FILE: .yamllint.yml

          # Markdown settings
          VALIDATE_MARKDOWN: true

          # Shell script settings
          VALIDATE_BASH: true
          VALIDATE_SHELL_SHFMT: true

          # GitHub Actions settings
          VALIDATE_GITHUB_ACTIONS: true

          # JSON settings
          VALIDATE_JSON: true

          # XML settings (for EPUB files)
          VALIDATE_XML: true

          # Natural language settings
          VALIDATE_NATURAL_LANGUAGE: false  # Too noisy for a translation project

          # Dockerfile settings (if we add Docker support later)
          VALIDATE_DOCKERFILE_HADOLINT: true

          # EditorConfig settings
          VALIDATE_EDITORCONFIG: true

          # Ignore generated files and test data
          FILTER_REGEX_EXCLUDE: .*\/(dist|build|htmlcov|\.pytest_cache|\.mypy_cache|\.ruff_cache|test_data|sample_novel)\/.*

          # File extensions to lint
          FILE_EXTENSIONS: .py,.yml,.yaml,.json,.xml,.sh,.bash,.md

          # Linter rules
          LINTER_RULES_PATH: .github/linters

          # Show all errors
          DISABLE_ERRORS: false

          # Create annotations in PR
          CREATE_LOG_FILE: true
          LOG_LEVEL: INFO
