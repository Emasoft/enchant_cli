name: Lint

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Set up Python
      run: |
        uv python install 3.12
        uv sync --all-extras

    - name: Install Go for yamlfmt
      uses: actions/setup-go@v5
      with:
        go-version: 'stable'

    - name: Install yamlfmt
      run: |
        go install github.com/google/yamlfmt/cmd/yamlfmt@latest

    - name: Install actionlint
      run: |
        bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
        sudo mv actionlint /usr/local/bin/


    - name: Install pre-commit
      run: |
        uv tool install pre-commit --with pre-commit-uv

    - name: Run pre-commit hooks
      run: |
        echo "::group::Running all pre-commit hooks"
        # Run pre-commit on all files
        pre-commit run --all-files --show-diff-on-failure
        echo "::endgroup::"

    - name: Run dependency checking (deptry)
      run: |
        echo "::group::Running deptry"
        uv run pre-commit run deptry --all-files || exit 1
        echo "::endgroup::"

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Install frontend dependencies
      run: uv run pnpm install
      if: hashFiles('pnpm-lock.yaml') != ''

    - name: Run ESLint
      run: |
        echo "::group::Running ESLint"
        uv run pnpm run lint || echo "No ESLint configuration found"
        echo "::endgroup::"
      if: hashFiles('pnpm-lock.yaml') != ''
