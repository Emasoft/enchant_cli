name: Docker Profile Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      profile:
        description: 'Test profile to run'
        required: true
        default: 'all'
        type: choice
        options:
        - local
        - remote
        - full
        - build
        - all

permissions:
  contents: read

jobs:
  docker-test-profiles:
    name: Docker Tests - ${{ matrix.profile }} profile
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        profile: [local, remote, full]
        exclude:
        # Skip local profile in CI by default
        - profile: local

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build test image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.profiles
        target: ${{ matrix.profile }}-test
        push: false
        tags: enchant-${{ matrix.profile }}-test:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run ${{ matrix.profile }} profile tests
      env:
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      run: |-
        docker run --rm \
          -e OPENROUTER_API_KEY="${OPENROUTER_API_KEY}" \
          -e TEST_PROFILE=${{ matrix.profile }} \
          -v ${{ github.workspace }}/test-results:/app/test-results \
          enchant-${{ matrix.profile }}-test:latest

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.profile }}
        path: |
          test-results/

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      if: matrix.profile == 'full' && always()
      with:
        name: coverage-report
        path: |
          htmlcov/
          test-results/coverage.xml

  test-project-build:
    name: Test Project Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build test image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.profiles
        target: full-test
        push: false
        tags: enchant-build-test:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run project build tests
      run: |-
        docker run --rm \
          -e TEST_PROFILE=build \
          -v ${{ github.workspace }}/test-results:/app/test-results \
          enchant-build-test:latest \
          uv run pytest tests/test_project_build.py -v

  summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [docker-test-profiles, test-project-build]
    if: always()

    steps:
    - name: Download all test results
      uses: actions/download-artifact@v4
      with:
        pattern: test-results-*
        merge-multiple: true

    - name: Generate summary
      run: |-
        echo "## Docker Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        for profile in remote full; do
          if [ -f "junit.xml" ]; then
            tests=$(grep -o 'tests="[0-9]*"' junit.xml | grep -o '[0-9]*' || echo "0")
            failures=$(grep -o 'failures="[0-9]*"' junit.xml | grep -o '[0-9]*' || echo "0")
            errors=$(grep -o 'errors="[0-9]*"' junit.xml | grep -o '[0-9]*' || echo "0")

            echo "### Profile: $profile" >> $GITHUB_STEP_SUMMARY
            echo "- Total tests: $tests" >> $GITHUB_STEP_SUMMARY
            echo "- Passed: $((tests - failures - errors))" >> $GITHUB_STEP_SUMMARY
            echo "- Failed: $failures" >> $GITHUB_STEP_SUMMARY
            echo "- Errors: $errors" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
        done
