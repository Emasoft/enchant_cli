[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "enchant-book-manager"
version = "1.1.0"
description = "EnChANT - English-Chinese Automatic Novel Translator"
readme = "README.md"
authors = [
    {name = "Emasoft", email = "713559+Emasoft@users.noreply.github.com"}
]
license = {text = "Apache-2.0"}
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
keywords = ["chinese", "translation", "epub", "novel", "ai"]
dependencies = [
    "chardet>=5.2.0",
    "colorama>=0.4.6",
    "filelock>=3.16.1",
    "peewee>=3.18.1",
    "pyyaml>=6.0.2",
    "requests>=2.32.4",
    "rich>=14.0.0",
    "tenacity>=9.1.2",
    "waiting>=1.4.1",
]

[project.scripts]
enchant-cli = "enchant_book_manager.enchant_cli:main"
enchant = "enchant_book_manager.enchant_cli:main"  # Shorter alias

[project.urls]
Homepage = "https://github.com/Emasoft/enchant-book-manager"
Repository = "https://github.com/Emasoft/enchant-book-manager"
Issues = "https://github.com/Emasoft/enchant-book-manager/issues"

[tool.hatch.build]
exclude = [
    "*.bak",
    "*.bak2",
    "*.log",
    "*.yml",
    "CLAUDE.md",
    "DEVELOPMENT_PLAN.md",
    "CODE_QUALITY_REVIEW.md",
    "ENCHANT_README.md",
    ".gitignore",
    ".python-version",
    "tests/",
    "__pycache__/",
    ".pytest_cache/",
    ".coverage",
    "htmlcov/",
    "dist/",
    "build/",
    "*.egg-info/",
]

[tool.hatch.build.targets.wheel]
packages = ["src/enchant_book_manager"]

[tool.hatch.version]
path = "src/enchant_book_manager/__init__.py"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "remote: marks tests that require remote API access",
]

[tool.deptry]
known_first_party = ["enchant_book_manager"]
ignore_notebooks = true
ignore = ["DEP001", "DEP002"]  # Ignore missing/unused optional dependencies

[dependency-groups]
dev = [
    "pytest>=8.4.0",
    "pytest-timeout>=2.4.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "mypy>=1.11.2",
    "ruff>=0.8.7",
    "pre-commit>=4.0.1",
    "deptry>=0.23.0",
    "pip-audit>=2.7.3",
    "yamllint>=1.35.1",
    "types-pyyaml>=6.0.12.20250516",
    "types-requests>=2.32.4.20250611",
    "types-chardet>=5.0.0",
    "types-colorama>=0.4.15",
]

[tool.uv]
# Package index configuration
# index-url = "https://pypi.org/simple"  # Default

# Environment constraints for cross-platform compatibility
environments = [
    "sys_platform == 'darwin'",  # macOS
    "sys_platform == 'linux'",   # Linux
    "sys_platform == 'win32'",   # Windows
]

# Development mode settings
dev-dependencies = [
    "ipython>=8.0.0",  # Interactive shell for development
]

# Build isolation settings (use defaults for most packages)
# no-build-isolation-package = []

# Package upgrade strategy
upgrade-package = []  # List packages that should always be upgraded

# Resolution settings
resolution = "highest"  # Use highest compatible versions

[tool.uv.sources]
# Define custom sources for packages if needed
# enchant-book-manager = { path = ".", editable = true }
