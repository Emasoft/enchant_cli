# Pre-commit configuration for EnChANT Book Manager
# Runs all linters automatically before each commit
minimum_pre_commit_version: '2.20.0'
fail_fast: false
default_language_version:
  python: python3.12

repos:
  # Standard pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: check-toml
      - id: check-json
      - id: debug-statements

  # Use uv for dependency management
  - repo: https://github.com/astral-sh/uv-pre-commit
    rev: 0.5.11
    hooks:
      # Ensure uv.lock is up-to-date
      - id: uv-lock

  # Ruff for linting and formatting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.8.5
    hooks:
      - id: ruff
        args: ['--fix', '--ignore', 'E203,E402,E501,E266,W505,F841,F842,F401,W293,I001,UP015,C901,W291', '--isolated']
      - id: ruff-format

  # Local hooks that use uv run
  - repo: local
    hooks:
      # Type checking with mypy
      - id: mypy
        name: mypy
        entry: uv run --frozen mypy
        language: system
        types: [python]
        require_serial: true
        args: ['--strict', '--show-error-context', '--pretty', '--no-color-output', '--show-error-codes', '--show-error-code-links', '--no-error-summary', '--follow-imports=normal']
        exclude: '^(tests/|__pycache__|\.git/)'

      # Dependency checking with deptry
      - id: deptry
        name: deptry
        entry: uv run --frozen deptry
        language: system
        always_run: true
        pass_filenames: false
        args: [.]

      # Security audit with pip-audit
      - id: pip-audit
        name: pip-audit
        entry: uv run --frozen pip-audit
        language: system
        always_run: true
        pass_filenames: false

      # YAML linting with yamllint
      - id: yamllint
        name: yamllint
        entry: uv run --frozen yamllint
        language: system
        types: [yaml]
        args: [-c, .yamllint]

      # GitHub Actions linting with actionlint
      - id: actionlint
        name: actionlint
        entry: actionlint
        language: system
        files: ^\.github/workflows/.*\.ya?ml$
        pass_filenames: true

      # Shell script linting with shellcheck
      - id: shellcheck
        name: shellcheck
        entry: uv run --frozen shellcheck
        language: system
        types: [shell]
        args: ['--severity=error', '--extended-analysis=true']

      # Detect secrets with gitleaks
      - id: gitleaks
        name: gitleaks
        entry: gitleaks protect --staged --verbose
        language: system
        pass_filenames: false
        always_run: true
